plugins {
    id 'com.android.application'
    id 'kotlin-android'
    id 'kotlin-kapt'
    id 'kotlin-android-extensions'
}

android {
    compileSdkVersion rootProject.ext.android["compileSdkVersion"]
    buildToolsVersion rootProject.ext.android["buildToolsVersion"]
    defaultConfig {
        applicationId "com.daomingedu.onecpteacher"
        minSdkVersion rootProject.ext.android["minSdkVersion"]
        targetSdkVersion rootProject.ext.android["targetSdkVersion"]
        versionCode rootProject.ext.android["versionCode"]
        versionName rootProject.ext.android["versionName"]

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"

        // 64k
        multiDexEnabled true

        ndk {
            abiFilters "armeabi-v7a", "x86"
//, "x86"//仿淘宝、微信、FaceBook、Twitter一样，一个api闯天下，目前主流手机cpu多属于armeabi-v7a
        }
    }

    buildTypes {
        debug {
            buildConfigField "boolean", "LOG_DEBUG", "true"
            buildConfigField "boolean", "USE_CANARY", "true"
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            multiDexKeepProguard file('multidex-config.pro')
        }

        release {
            buildConfigField "boolean", "LOG_DEBUG", "false"
            buildConfigField "boolean", "USE_CANARY", "false"
            minifyEnabled false
            shrinkResources false
            zipAlignEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            multiDexKeepProguard file('multidex-config.pro')
//            signingConfig signingConfigs.release
        }
    }

    applicationVariants.all {
        variant ->
            variant.outputs.all { output ->
                def outputFile = output.outputFile
                if (outputFile != null && outputFile.name.endsWith('.apk')) {
//                    def fileName = outputFile.name.replace(".apk", "-${defaultConfig.versionName}.apk")
                    def fileName = "OnecpTeacher-${defaultConfig.versionName}.apk"
                    outputFileName = fileName
                }
            }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }

    signingConfigs {
        config {
            keyAlias 'key0'
            keyPassword '123456'
            storeFile file('../app/oncepteacher')
            storePassword '123456'
        }
    }

    sourceSets {
        main {
//            if (!useLibrary) {
            jniLibs.srcDirs = ['src/main/jniLibs']
//            }
        }
    }
}

dependencies {

    implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
    implementation 'androidx.core:core-ktx:1.3.1'
    implementation 'androidx.appcompat:appcompat:1.2.0'
    implementation 'com.google.android.material:material:1.2.1'
    implementation 'androidx.constraintlayout:constraintlayout:2.0.1'
    testImplementation 'junit:junit:4.+'
    androidTestImplementation 'androidx.test.ext:junit:1.1.2'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.3.0'

    implementation project(path: ':imagepicker')
    implementation project(path: ':videoRecord')
    implementation project(path: ':videocompressor')
//    implementation project(path: ':pickTime')


    //注意 Arms 核心库现在并不会依赖某个 EventBus, 要想使用 EventBus, 还请在项目中自行依赖对应的 EventBus

    //现在支持两种 EventBus, greenrobot 的 EventBus 和畅销书 《Android源码设计模式解析与实战》的作者 何红辉 所作的 AndroidEventBus

    //依赖后 Arms 会自动检测您依赖的 EventBus 并自动注册

    //建议使用 AndroidEventBus, 特别是组件化项目, 原因请看 https://github.com/hehonghui/AndroidEventBus/issues/49

    //这种做法可以让使用者有自行选择三方库的权利, 并且还可以减轻 Arms 的体积
    implementation rootProject.ext.dependencies["androideventbus"]

    //Github 仓库上最新的 Demo 具有下一个版本的新特性, 所以依赖最新的远程库会出现版本不兼容的情况, 详情请查看 https://github.com/JessYanCoding/MVPArms/wiki/Issues#2
    implementation project(path: ':arms')
    implementation project(path: ':arms-imageloader-glide')

    //现在已经将 Demo 中的屏幕适配框架从 AndroidAutoLayout 替换为 AndroidAutoSize, AndroidAutoLayout 和 AndroidAutoSize 可以在项目中共存

    //所以旧项目只要依赖 arms-autolayout 即可兼容之前的旧页面, 新页面可以使用 AndroidAutoSize 进行适配, 等有时间了再将旧页面全部替换为 AndroidAutoSize
//    implementation rootProject.ext.dependencies["autosize"]

    //Arms 核心库不再包含 Glide, 想使用其他图片加载框架或者想自行扩展 ImageLoaderStrategy 就不要依赖 arms-imageloader-glide

    //依赖 arms-imageloader-glide 后还需要在 GlobalConfiguration 中手动注册 GlideImageLoaderStrategy
//    implementation 'me.jessyan:arms-imageloader-glide:2.5.0'


    //    implementation rootProject.ext.dependencies["appcompat-v7"]

    //tools
    kapt rootProject.ext.dependencies["dagger2-compiler"]
    implementation rootProject.ext.dependencies["progressmanager"]
    implementation rootProject.ext.dependencies["retrofit-url-manager"]
    implementation rootProject.ext.dependencies["lifecyclemodel"]
//    implementation rootProject.ext.dependencies["anko-commons"]
//    implementation rootProject.ext.dependencies["anko-appcompat-v7"]
    implementation rootProject.ext.dependencies["rxpermissions2"]
    implementation 'com.jakewharton.threetenabp:threetenabp:1.2.0'
    implementation 'top.zibin:Luban:1.1.8'
    implementation 'com.squareup.retrofit2:converter-gson:2.4.0'
    implementation 'com.squareup.retrofit2:adapter-rxjava2:2.4.0'

    //view
    implementation rootProject.ext.dependencies["banner"]
    implementation rootProject.ext.dependencies["baseRecyclerViewAdapterHelper"]
//    implementation 'com.github.codbking:PickTime:v1.0.1'

    //support
    implementation rootProject.ext.dependencies["design"]
    implementation rootProject.ext.dependencies["support-v4"]

    //64K
    implementation rootProject.ext.dependencies["multidex"]

    //test
    testImplementation rootProject.ext.dependencies["junit"]
    debugImplementation rootProject.ext.dependencies["canary-debug"]
    releaseImplementation rootProject.ext.dependencies["canary-release"]
    testImplementation rootProject.ext.dependencies["canary-release"]


    implementation rootProject.ext.dependencies["butterknife"]
    kapt rootProject.ext.dependencies["butterknife-compiler"]
    implementation 'com.teprinciple:updateapputils:2.3.0'
    implementation 'com.blankj:utilcode:1.26.0'
//    implementation 'com.tencent.bugly:crashreport_upgrade:latest.release'
//其中latest.release指代最新版本号，也可以指定明确的版本号，例如1.2.0
//    implementation 'com.tencent.bugly:nativecrashreport:latest.release'

    //其中latest.release指代最新版本号，也可以指定明确的版本号，例如2.2.0

    implementation 'com.lzy.net:okgo:3.0.3'
    implementation 'com.google.code.gson:gson:2.2.4'

    implementation 'net.alhazmy13.MediaPicker:libary:2.4.4'

    implementation files('libs/pldroid-player-2.2.0.jar')
    implementation files('libs/Msc.jar')
    implementation 'com.tencent.qcloud:cosxml:5.5.5'
}